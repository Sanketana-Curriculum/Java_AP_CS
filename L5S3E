public class EquilibriumPoint {

    // Function to find the equilibrium point in an array
    static int findEquilibriumPoint(int[] arr, int n) {
        // Calculate the total sum of the array
        int totalSum = 0;
        for (int num : arr) {
            totalSum += num;
        }

        // Initialize the left sum to 0
        int leftSum = 0;

        // Iterate through the array to find the equilibrium point
        for (int i = 0; i < n; i++) {
            // Subtract the current element from the total sum to get the right sum
            int rightSum = totalSum - leftSum - arr[i];

            // Check if the left sum and right sum are equal
            if (leftSum == rightSum) {
                // Return the equilibrium point (1-based indexing)
                return i + 1;
            }

            // Update the left sum for the next iteration
            leftSum += arr[i];
        }

        // No equilibrium point found
        return -1;
    }

    public static void main(String[] args) {
        // Example array
        int[] arr = {1, 3, 5, 2, 2};
        int n = arr.length;

        // Find the equilibrium point
        int equilibriumPoint = findEquilibriumPoint(arr, n);

        // Display the result
        if (equilibriumPoint != -1) {
            System.out.println("Equilibrium point is at position: " + equilibriumPoint);
        } else {
            System.out.println("No equilibrium point exists in the array.");
        }
    }
}
