import java.io.*;

class JumpGame {

    static int minJumps(int arr[]) {

        //invalid input 
        if (arr.length <= 1)  
            return 0;

        if(arr[0] == 0) 
            return -1;
        
        int maxReach = arr[0];   
        int step = arr[0];
        int jump = 1;
      
        //start traversing array
        for(int i=1;i<arr.length;i++){
            //check if we have reached 
            //the end of the array
            if(i == arr.length-1)
                return jump;
            
            //updating maxReach
            maxReach = Math.max(maxReach, i+arr[i]); 
            
           //we use a step to get to the current index
           step--; 
           
           //if no further steps left 
           if(step == 0){  
               
               //we must have used a jump          
               jump++;
       
               //check if the current 
               //index/position or lesser index
               //is the maximum reach point 
               //from the previous indexes 
               if(i>=maxReach)  
                   return -1; 
               
               //re-initialize the steps to the amount
               //of steps to reach maxReach from position i. 
               step = maxReach - i;    
           }
            
        }
        
        return -1;
    }
    

    public static void main (String[] args) {
    
        int arr[] = {1, 3, 5, 8, 9, 2, 6, 7, 6, 8, 9};
        
        int minJumps = minJumps(arr);
        
        if(minJumps != -1){
            System.out.println(minJumps); 
        }
        else {
            System.out.println("End not reachable"); 
        }
    }
}
