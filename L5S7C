// Custom exception class for Insufficient Funds
class InsufficientFundsException extends Exception {
    public InsufficientFundsException(String message) {
        super(message);
    }
}

// BankAccount class with a withdraw method
class BankAccount {
    private double balance;

    // Constructor to initialize balance
    public BankAccount(double initialBalance) {
        this.balance = initialBalance;
    }

    // Method to withdraw money from the account
    public void withdraw(double amount) throws InsufficientFundsException {
        if (amount > balance) {
            throw new InsufficientFundsException("Insufficient funds to withdraw: " + amount);
        }
        balance -= amount;
        System.out.println("Withdrawal successful. Remaining balance: " + balance);
    }

    // Method to deposit money into the account
    public void deposit(double amount) {
        balance += amount;
        System.out.println("Deposit successful. New balance: " + balance);
    }

    // Method to get the current balance
    public double getBalance() {
        return balance;
    }
}

// Main class to test the BankAccount class
public class Main {
    public static void main(String[] args) {
        // Create a BankAccount object with initial balance
        BankAccount account = new BankAccount(1000);

        try {
            // Withdraw an amount greater than balance
            account.withdraw(1500);
        } catch (InsufficientFundsException e) {
            // Handle InsufficientFundsException
            System.out.println("Error: " + e.getMessage());
        }

        // Deposit some money into the account
        account.deposit(500);

        // Withdraw an amount less than balance
        try {
            account.withdraw(800);
        } catch (InsufficientFundsException e) {
            // Handle InsufficientFundsException
            System.out.println("Error: " + e.getMessage());
        }
    }
}
