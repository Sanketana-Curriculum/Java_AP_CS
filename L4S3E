import java.util.Scanner;

public class RowAverageCalculator {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        // Create a 3x3 matrix
        int[][] matrix = new int[3][3];

        // Input matrix elements
        System.out.println("Enter the elements of the 3x3 matrix:");
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                System.out.print("Matrix[" + i + "][" + j + "]: ");
                matrix[i][j] = scanner.nextInt();
            }
        }

        // Calculate row-wise averages
        double[] rowAverages = calculateRowAverages(matrix);

        // Find the row with the maximum average
        int maxAverageRowIndex = findMaxAverageRow(rowAverages);

        // Display the matrix and results
        displayMatrix(matrix);
        displayRowAverages(rowAverages);
        displayMaxAverageRow(maxAverageRowIndex);

        scanner.close();
    }

    // Method to calculate row-wise averages
    private static double[] calculateRowAverages(int[][] matrix) {
        double[] rowAverages = new double[matrix.length];

        for (int i = 0; i < matrix.length; i++) {
            int sum = 0;
            for (int j = 0; j < matrix[i].length; j++) {
                sum += matrix[i][j];
            }
            rowAverages[i] = (double) sum / matrix[i].length;
        }

        return rowAverages;
    }

    // Method to find the row with the maximum average
    private static int findMaxAverageRow(double[] rowAverages) {
        int maxIndex = 0;
        for (int i = 1; i < rowAverages.length; i++) {
            if (rowAverages[i] > rowAverages[maxIndex]) {
                maxIndex = i;
            }
        }
        return maxIndex;
    }

    // Helper method to display the matrix
    private static void displayMatrix(int[][] matrix) {
        System.out.println("Matrix:");
        for (int i = 0; i < matrix.length; i++) {
            for (int j = 0; j < matrix[i].length; j++) {
                System.out.print(matrix[i][j] + " ");
            }
            System.out.println();
        }
    }

    // Helper method to display row-wise averages
    private static void displayRowAverages(double[] rowAverages) {
        System.out.println("\nRow-wise Averages:");
        for (int i = 0; i < rowAverages.length; i++) {
            System.out.println("Row " + (i + 1) + ": " + rowAverages[i]);
        }
    }

    // Helper method to display the row with the maximum average
    private static void displayMaxAverageRow(int maxIndex) {
        System.out.println("\nRow with Maximum Average: " + (maxIndex + 1));
    }
}
