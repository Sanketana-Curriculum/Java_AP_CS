// With Stream 

import java.util.Arrays;
import java.util.List;
import java.util.stream.Collectors;

public class LambdaFiltering {
    public static void main(String[] args) {
        // Sample array of strings
        String[] words = {"Apple", "Banana", "Apricot", "Avocado", "Orange", "Grape"};

        // Filter out strings starting with 'A' using lambda expressions
        List<String> filteredWords = Arrays.stream(words)
                                           .filter(word -> word.startsWith("A"))
                                           .collect(Collectors.toList());

        // Print the filtered strings
        System.out.println("Strings starting with 'A': " + filteredWords);
    }
}


// Without Stream
import java.util.ArrayList;
import java.util.List;

public class LambdaFilteringWithoutStream {
    public static void main(String[] args) {
        // Sample array of strings
        String[] words = {"Apple", "Banana", "Apricot", "Avocado", "Orange", "Grape"};

        // Filter out strings starting with 'A' using a lambda expression and loop
        List<String> filteredWords = filterWordsStartingWithA(words);

        // Print the filtered strings
        System.out.println("Strings starting with 'A': " + filteredWords);
    }

    // Method to filter out strings starting with 'A' using a lambda expression and loop
    private static List<String> filterWordsStartingWithA(String[] words) {
        List<String> filteredWords = new ArrayList<>();
        for (String word : words) {
            if (word.startsWith("A")) {
                filteredWords.add(word);
            }
        }
        return filteredWords;
    }
}
